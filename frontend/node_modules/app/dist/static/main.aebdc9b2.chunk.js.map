{"version":3,"sources":["webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/api/runtime.ts","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/api/models/ControllersRecordfood.ts","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/api/models/EntFOODMENU.ts","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/api/models/EntFOODMENUEdges.ts","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/api/models/EntMainingre.ts","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/api/models/EntMainingreEdges.ts","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/api/models/EntRecordfood.ts","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/api/models/EntRecordfoodEdges.ts","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/api/models/EntSource.ts","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/api/models/EntSourceEdges.ts","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/api/models/EntUser.ts","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/api/models/EntUserEdges.ts","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/api/apis/DefaultApi.ts","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/components/Table/Tables.tsx","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/components/WelcomePage/WelcomePage.tsx","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/components/Users/Create.tsx","webpack:///C:/TEST6-5.16-14-10-63/SA-63/frontend/plugins/welcome/src/plugin.ts","webpack:///./src/App.tsx","webpack:///./src/index.tsx"],"names":["BASE_PATH","replace","BaseAPI","configuration","Configuration","this","prototype","__init","call","middleware","middlewares","next","clone","concat","preMiddlewares","map","pre","withMiddleware","postMiddlewares","post","context","url","init","createFetchParams","response","fetchApi","status","basePath","path","undefined","query","Object","keys","length","queryParamsStringify","body","FormData","URLSearchParams","value","Blob","JSON","stringify","headers","assign","method","credentials","async","fetchParams","fetch","constructor","slice","RequiredError","Error","name","field","msg","super","__init2","window","bind","querystring","username","password","apiKey","accessToken","exists","json","key","params","prefix","fullKey","Array","multiValue","singleValue","encodeURIComponent","String","join","filter","part","JSONApiResponse","raw","transformer","jsonValue","ControllersRecordfoodToJSON","recordFOODMENU","recordINGREDIENT","recordSOURCE","recordUSER","EntFOODMENUFromJSON","ignoreDiscriminator","EntFOODMENUEdgesFromJSON","EntFOODMENUFromJSONTyped","EntFOODMENUToJSON","fOODMENUNAME","EntFOODMENUEdgesToJSON","edges","id","EntRecordfoodFromJSON","EntFOODMENUEdgesFromJSONTyped","foodmenurecord","EntRecordfoodToJSON","EntMainingreFromJSON","EntMainingreEdgesFromJSON","EntMainingreFromJSONTyped","EntMainingreToJSON","mAININGREDIENTNAME","EntMainingreEdgesToJSON","EntMainingreEdgesFromJSONTyped","mainingrerecord","EntRecordfoodEdgesFromJSON","EntRecordfoodFromJSONTyped","EntRecordfoodEdgesToJSON","EntSourceFromJSON","EntUserFromJSON","EntRecordfoodEdgesFromJSONTyped","recordfoodmenu","recordingredient","EntSourceToJSON","recordsource","EntUserToJSON","recorduser","EntSourceEdgesFromJSON","EntSourceFromJSONTyped","sOURCEADDRESS","sOURCENAME","sOURCETLE","EntSourceEdgesToJSON","EntSourceEdgesFromJSONTyped","sourcerecord","EntUserEdgesFromJSON","EntUserFromJSONTyped","uSEREMAIL","uSERNAME","EntUserEdgesToJSON","EntUserEdgesFromJSONTyped","userrecord","requestParameters","foodmenu","headerParameters","request","createFoodmenuRaw","mainingre","createMainingreRaw","recordfood","createRecordfoodRaw","source","createSourceRaw","user","createUserRaw","deleteFoodmenuRaw","deleteMainingreRaw","deleteRecordfoodRaw","deleteSourceRaw","deleteUserRaw","getFoodmenuRaw","getMainingreRaw","getSourceRaw","getUserRaw","queryParameters","limit","offset","listFoodmenuRaw","listMainingreRaw","listRecordfoodRaw","listSourceRaw","listUserRaw","updateFoodmenuRaw","updateMainingreRaw","updateSourceRaw","updateUserRaw","useStyles","makeStyles","table","minWidth","ComponentsTable","classes","api","users","setUsers","loading","setLoading","recordfoods","setRecordfoods","res","listRecordfood","getRecordfoods","createElement","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","align","TableBody","item","Button","onClick","deleteRecordfood","deleteRecordfoods","style","marginLeft","variant","color","theme","home","title","subtitle","to","createStyles","root","display","flexWrap","justifyContent","margin","spacing","withoutLabel","marginTop","textField","width","initialUserState","n","Create","setUser","foodmenus","setFOODMENU","mainingres","setMainingre","sources","setSource","setRec","setStatus","alert","setAlert","foodmenuid","setFOODMENUID","Number","mainingreid","setMainingreID","sourceid","setSourceID","listFoodmenu","getFOODMENU","listMainingre","getMainingre","listSource","getSource","Typography","marginRight","Alert","severity","noValidate","autoComplete","FormControl","InputLabel","Select","labelId","onChange","event","target","MenuItem","console","log","createRecordfood","setTimeout","CreateRecordfood","router","registerRoute","app","plugins","values","AppProvider","getProvider","AppRouter","getRouter","AppRoutes","getRoutes","render","document","getElementById"],"mappings":"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","file":"static/main.aebdc9b2.chunk.js","sourcesContent":["/* tslint:disable */\r\n/* eslint-disable */\r\n/**\r\n * SUT SA Example API\r\n * This is a sample server for SUT SE 2563\r\n *\r\n * The version of the OpenAPI document: 1.0\r\n * Contact: support@swagger.io\r\n *\r\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\r\n * https://openapi-generator.tech\r\n * Do not edit the class manually.\r\n */\r\n\r\n\r\nexport const BASE_PATH = \"http://localhost:8080/api/v1\".replace(/\\/+$/, \"\");\r\n\r\nconst isBlob = (value) => typeof Blob !== 'undefined' && value instanceof Blob;\r\n\r\n/**\r\n * This is the base class for all generated API classes.\r\n */\r\nexport class BaseAPI {\r\n\r\n    \r\n\r\n    constructor( configuration = new Configuration()) {;this.configuration = configuration;BaseAPI.prototype.__init.call(this);\r\n        this.middleware = configuration.middleware;\r\n    }\r\n\r\n    withMiddleware( ...middlewares) {\r\n        const next = this.clone();\r\n        next.middleware = next.middleware.concat(...middlewares);\r\n        return next;\r\n    }\r\n\r\n    withPreMiddleware( ...preMiddlewares) {\r\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\r\n        return this.withMiddleware(...middlewares);\r\n    }\r\n\r\n    withPostMiddleware( ...postMiddlewares) {\r\n        const middlewares = postMiddlewares.map((post) => ({ post }));\r\n        return this.withMiddleware(...middlewares);\r\n    }\r\n\r\n     async request(context) {\r\n        const { url, init } = this.createFetchParams(context);\r\n        const response = await this.fetchApi(url, init);\r\n        if (response.status >= 200 && response.status < 300) {\r\n            return response;\r\n        }\r\n        throw response;\r\n    }\r\n\r\n     createFetchParams(context) {\r\n        let url = this.configuration.basePath + context.path;\r\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\r\n            // only add the querystring to the URL if there are query parameters.\r\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\r\n            // do not handle correctly sometimes.\r\n            url += '?' + this.configuration.queryParamsStringify(context.query);\r\n        }\r\n        const body = ((typeof FormData !== \"undefined\" && context.body instanceof FormData) || context.body instanceof URLSearchParams || isBlob(context.body))\r\n\t    ? context.body\r\n\t    : JSON.stringify(context.body);\r\n\r\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\r\n        const init = {\r\n            method: context.method,\r\n            headers: headers,\r\n            body,\r\n            credentials: this.configuration.credentials\r\n        };\r\n        return { url, init };\r\n    }\r\n\r\n     __init() {this.fetchApi = async (url, init) => {\r\n        let fetchParams = { url, init };\r\n        for (const middleware of this.middleware) {\r\n            if (middleware.pre) {\r\n                fetchParams = await middleware.pre({\r\n                    fetch: this.fetchApi,\r\n                    ...fetchParams,\r\n                }) || fetchParams;\r\n            }\r\n        }\r\n        let response = await this.configuration.fetchApi(fetchParams.url, fetchParams.init);\r\n        for (const middleware of this.middleware) {\r\n            if (middleware.post) {\r\n                response = await middleware.post({\r\n                    fetch: this.fetchApi,\r\n                    url,\r\n                    init,\r\n                    response: response.clone(),\r\n                }) || response;\r\n            }\r\n        }\r\n        return response;\r\n    }}\r\n\r\n    /**\r\n     * Create a shallow clone of `this` by constructing a new instance\r\n     * and then shallow cloning data members.\r\n     */\r\n     clone() {\r\n        const constructor = this.constructor ;\r\n        const next = new constructor(this.configuration);\r\n        next.middleware = this.middleware.slice();\r\n        return next;\r\n    }\r\n};\r\n\r\nexport class RequiredError extends Error {\r\n    __init2() {this.name = \"RequiredError\"}\r\n    constructor( field, msg) {\r\n        super(msg);this.field = field;RequiredError.prototype.__init2.call(this);;\r\n    }\r\n}\r\n\r\nexport const COLLECTION_FORMATS = {\r\n    csv: \",\",\r\n    ssv: \" \",\r\n    tsv: \"\\t\",\r\n    pipes: \"|\",\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport class Configuration {\r\n    constructor( configuration = {}) {;this.configuration = configuration;}\r\n\r\n    get basePath() {\r\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;\r\n    }\r\n\r\n    get fetchApi() {\r\n        return this.configuration.fetchApi || window.fetch.bind(window);\r\n    }\r\n\r\n    get middleware() {\r\n        return this.configuration.middleware || [];\r\n    }\r\n\r\n    get queryParamsStringify() {\r\n        return this.configuration.queryParamsStringify || querystring;\r\n    }\r\n\r\n    get username() {\r\n        return this.configuration.username;\r\n    }\r\n\r\n    get password() {\r\n        return this.configuration.password;\r\n    }\r\n\r\n    get apiKey() {\r\n        const apiKey = this.configuration.apiKey;\r\n        if (apiKey) {\r\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    get accessToken() {\r\n        const accessToken = this.configuration.accessToken;\r\n        if (accessToken) {\r\n            return typeof accessToken === 'function' ? accessToken : () => accessToken;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    get headers() {\r\n        return this.configuration.headers;\r\n    }\r\n\r\n    get credentials() {\r\n        return this.configuration.credentials;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function exists(json, key) {\r\n    const value = json[key];\r\n    return value !== null && value !== undefined;\r\n}\r\n\r\nexport function querystring(params, prefix = '') {\r\n    return Object.keys(params)\r\n        .map((key) => {\r\n            const fullKey = prefix + (prefix.length ? `[${key}]` : key);\r\n            const value = params[key];\r\n            if (value instanceof Array) {\r\n                const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\r\n                    .join(`&${encodeURIComponent(fullKey)}=`);\r\n                return `${encodeURIComponent(fullKey)}=${multiValue}`;\r\n            }\r\n            if (value instanceof Object) {\r\n                return querystring(value , fullKey);\r\n            }\r\n            return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\r\n        })\r\n        .filter(part => part.length > 0)\r\n        .join('&');\r\n}\r\n\r\nexport function mapValues(data, fn) {\r\n  return Object.keys(data).reduce(\r\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\r\n    {}\r\n  );\r\n}\r\n\r\nexport function canConsumeForm(consumes) {\r\n    for (const consume of consumes) {\r\n        if ('multipart/form-data' === consume.contentType) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport class JSONApiResponse {\r\n    constructor( raw,  transformer = (jsonValue) => jsonValue) {;this.raw = raw;this.transformer = transformer;}\r\n\r\n    async value() {\r\n        return this.transformer(await this.raw.json());\r\n    }\r\n}\r\n\r\nexport class VoidApiResponse {\r\n    constructor( raw) {;this.raw = raw;}\r\n\r\n    async value() {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport class BlobApiResponse {\r\n    constructor( raw) {;this.raw = raw;}\r\n\r\n    async value() {\r\n        return await this.raw.blob();\r\n    };\r\n}\r\n\r\nexport class TextApiResponse {\r\n    constructor( raw) {;this.raw = raw;}\r\n\r\n    async value() {\r\n        return await this.raw.text();\r\n    };\r\n}\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n/**\r\n * SUT SA Example API\r\n * This is a sample server for SUT SE 2563\r\n *\r\n * The version of the OpenAPI document: 1.0\r\n * Contact: support@swagger.io\r\n *\r\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\r\n * https://openapi-generator.tech\r\n * Do not edit the class manually.\r\n */\r\n\r\nimport { exists, } from '../runtime';\r\n/**\r\n * \r\n * @export\r\n * @interface ControllersRecordfood\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function ControllersRecordfoodFromJSON(json) {\r\n    return ControllersRecordfoodFromJSONTyped(json, false);\r\n}\r\n\r\nexport function ControllersRecordfoodFromJSONTyped(json, ignoreDiscriminator) {\r\n    if ((json === undefined) || (json === null)) {\r\n        return json;\r\n    }\r\n    return {\r\n        \r\n        'recordFOODMENU': !exists(json, 'recordFOODMENU') ? undefined : json['recordFOODMENU'],\r\n        'recordINGREDIENT': !exists(json, 'recordINGREDIENT') ? undefined : json['recordINGREDIENT'],\r\n        'recordSOURCE': !exists(json, 'recordSOURCE') ? undefined : json['recordSOURCE'],\r\n        'recordUSER': !exists(json, 'recordUSER') ? undefined : json['recordUSER'],\r\n    };\r\n}\r\n\r\nexport function ControllersRecordfoodToJSON(value) {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (value === null) {\r\n        return null;\r\n    }\r\n    return {\r\n        \r\n        'recordFOODMENU': value.recordFOODMENU,\r\n        'recordINGREDIENT': value.recordINGREDIENT,\r\n        'recordSOURCE': value.recordSOURCE,\r\n        'recordUSER': value.recordUSER,\r\n    };\r\n}\r\n\r\n\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n/**\r\n * SUT SA Example API\r\n * This is a sample server for SUT SE 2563\r\n *\r\n * The version of the OpenAPI document: 1.0\r\n * Contact: support@swagger.io\r\n *\r\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\r\n * https://openapi-generator.tech\r\n * Do not edit the class manually.\r\n */\r\n\r\nimport { exists, } from '../runtime';\r\nimport {\r\n\r\n    EntFOODMENUEdgesFromJSON,\r\n\r\n    EntFOODMENUEdgesToJSON,\r\n} from './';\r\n\r\n/**\r\n * \r\n * @export\r\n * @interface EntFOODMENU\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function EntFOODMENUFromJSON(json) {\r\n    return EntFOODMENUFromJSONTyped(json, false);\r\n}\r\n\r\nexport function EntFOODMENUFromJSONTyped(json, ignoreDiscriminator) {\r\n    if ((json === undefined) || (json === null)) {\r\n        return json;\r\n    }\r\n    return {\r\n        \r\n        'fOODMENUNAME': !exists(json, 'FOODMENU_NAME') ? undefined : json['FOODMENU_NAME'],\r\n        'edges': !exists(json, 'edges') ? undefined : EntFOODMENUEdgesFromJSON(json['edges']),\r\n        'id': !exists(json, 'id') ? undefined : json['id'],\r\n    };\r\n}\r\n\r\nexport function EntFOODMENUToJSON(value) {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (value === null) {\r\n        return null;\r\n    }\r\n    return {\r\n        \r\n        'FOODMENU_NAME': value.fOODMENUNAME,\r\n        'edges': EntFOODMENUEdgesToJSON(value.edges),\r\n        'id': value.id,\r\n    };\r\n}\r\n\r\n\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n/**\r\n * SUT SA Example API\r\n * This is a sample server for SUT SE 2563\r\n *\r\n * The version of the OpenAPI document: 1.0\r\n * Contact: support@swagger.io\r\n *\r\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\r\n * https://openapi-generator.tech\r\n * Do not edit the class manually.\r\n */\r\n\r\nimport { exists, } from '../runtime';\r\nimport {\r\n\r\n    EntRecordfoodFromJSON,\r\n\r\n    EntRecordfoodToJSON,\r\n} from './';\r\n\r\n/**\r\n * \r\n * @export\r\n * @interface EntFOODMENUEdges\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function EntFOODMENUEdgesFromJSON(json) {\r\n    return EntFOODMENUEdgesFromJSONTyped(json, false);\r\n}\r\n\r\nexport function EntFOODMENUEdgesFromJSONTyped(json, ignoreDiscriminator) {\r\n    if ((json === undefined) || (json === null)) {\r\n        return json;\r\n    }\r\n    return {\r\n        \r\n        'foodmenurecord': !exists(json, 'foodmenurecord') ? undefined : ((json['foodmenurecord'] ).map(EntRecordfoodFromJSON)),\r\n    };\r\n}\r\n\r\nexport function EntFOODMENUEdgesToJSON(value) {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (value === null) {\r\n        return null;\r\n    }\r\n    return {\r\n        \r\n        'foodmenurecord': value.foodmenurecord === undefined ? undefined : ((value.foodmenurecord ).map(EntRecordfoodToJSON)),\r\n    };\r\n}\r\n\r\n\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n/**\r\n * SUT SA Example API\r\n * This is a sample server for SUT SE 2563\r\n *\r\n * The version of the OpenAPI document: 1.0\r\n * Contact: support@swagger.io\r\n *\r\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\r\n * https://openapi-generator.tech\r\n * Do not edit the class manually.\r\n */\r\n\r\nimport { exists, } from '../runtime';\r\nimport {\r\n\r\n    EntMainingreEdgesFromJSON,\r\n\r\n    EntMainingreEdgesToJSON,\r\n} from './';\r\n\r\n/**\r\n * \r\n * @export\r\n * @interface EntMainingre\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function EntMainingreFromJSON(json) {\r\n    return EntMainingreFromJSONTyped(json, false);\r\n}\r\n\r\nexport function EntMainingreFromJSONTyped(json, ignoreDiscriminator) {\r\n    if ((json === undefined) || (json === null)) {\r\n        return json;\r\n    }\r\n    return {\r\n        \r\n        'mAININGREDIENTNAME': !exists(json, 'MAIN_INGREDIENT_NAME') ? undefined : json['MAIN_INGREDIENT_NAME'],\r\n        'edges': !exists(json, 'edges') ? undefined : EntMainingreEdgesFromJSON(json['edges']),\r\n        'id': !exists(json, 'id') ? undefined : json['id'],\r\n    };\r\n}\r\n\r\nexport function EntMainingreToJSON(value) {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (value === null) {\r\n        return null;\r\n    }\r\n    return {\r\n        \r\n        'MAIN_INGREDIENT_NAME': value.mAININGREDIENTNAME,\r\n        'edges': EntMainingreEdgesToJSON(value.edges),\r\n        'id': value.id,\r\n    };\r\n}\r\n\r\n\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n/**\r\n * SUT SA Example API\r\n * This is a sample server for SUT SE 2563\r\n *\r\n * The version of the OpenAPI document: 1.0\r\n * Contact: support@swagger.io\r\n *\r\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\r\n * https://openapi-generator.tech\r\n * Do not edit the class manually.\r\n */\r\n\r\nimport { exists, } from '../runtime';\r\nimport {\r\n\r\n    EntRecordfoodFromJSON,\r\n\r\n    EntRecordfoodToJSON,\r\n} from './';\r\n\r\n/**\r\n * \r\n * @export\r\n * @interface EntMainingreEdges\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function EntMainingreEdgesFromJSON(json) {\r\n    return EntMainingreEdgesFromJSONTyped(json, false);\r\n}\r\n\r\nexport function EntMainingreEdgesFromJSONTyped(json, ignoreDiscriminator) {\r\n    if ((json === undefined) || (json === null)) {\r\n        return json;\r\n    }\r\n    return {\r\n        \r\n        'mainingrerecord': !exists(json, 'mainingrerecord') ? undefined : ((json['mainingrerecord'] ).map(EntRecordfoodFromJSON)),\r\n    };\r\n}\r\n\r\nexport function EntMainingreEdgesToJSON(value) {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (value === null) {\r\n        return null;\r\n    }\r\n    return {\r\n        \r\n        'mainingrerecord': value.mainingrerecord === undefined ? undefined : ((value.mainingrerecord ).map(EntRecordfoodToJSON)),\r\n    };\r\n}\r\n\r\n\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n/**\r\n * SUT SA Example API\r\n * This is a sample server for SUT SE 2563\r\n *\r\n * The version of the OpenAPI document: 1.0\r\n * Contact: support@swagger.io\r\n *\r\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\r\n * https://openapi-generator.tech\r\n * Do not edit the class manually.\r\n */\r\n\r\nimport { exists, } from '../runtime';\r\nimport {\r\n\r\n    EntRecordfoodEdgesFromJSON,\r\n\r\n    EntRecordfoodEdgesToJSON,\r\n} from './';\r\n\r\n/**\r\n * \r\n * @export\r\n * @interface EntRecordfood\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function EntRecordfoodFromJSON(json) {\r\n    return EntRecordfoodFromJSONTyped(json, false);\r\n}\r\n\r\nexport function EntRecordfoodFromJSONTyped(json, ignoreDiscriminator) {\r\n    if ((json === undefined) || (json === null)) {\r\n        return json;\r\n    }\r\n    return {\r\n        \r\n        'edges': !exists(json, 'edges') ? undefined : EntRecordfoodEdgesFromJSON(json['edges']),\r\n        'id': !exists(json, 'id') ? undefined : json['id'],\r\n    };\r\n}\r\n\r\nexport function EntRecordfoodToJSON(value) {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (value === null) {\r\n        return null;\r\n    }\r\n    return {\r\n        \r\n        'edges': EntRecordfoodEdgesToJSON(value.edges),\r\n        'id': value.id,\r\n    };\r\n}\r\n\r\n\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n/**\r\n * SUT SA Example API\r\n * This is a sample server for SUT SE 2563\r\n *\r\n * The version of the OpenAPI document: 1.0\r\n * Contact: support@swagger.io\r\n *\r\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\r\n * https://openapi-generator.tech\r\n * Do not edit the class manually.\r\n */\r\n\r\nimport { exists, } from '../runtime';\r\nimport {\r\n\r\n    EntFOODMENUFromJSON,\r\n\r\n    EntFOODMENUToJSON,\r\n\r\n    EntMainingreFromJSON,\r\n\r\n    EntMainingreToJSON,\r\n\r\n    EntSourceFromJSON,\r\n\r\n    EntSourceToJSON,\r\n\r\n    EntUserFromJSON,\r\n\r\n    EntUserToJSON,\r\n} from './';\r\n\r\n/**\r\n * \r\n * @export\r\n * @interface EntRecordfoodEdges\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function EntRecordfoodEdgesFromJSON(json) {\r\n    return EntRecordfoodEdgesFromJSONTyped(json, false);\r\n}\r\n\r\nexport function EntRecordfoodEdgesFromJSONTyped(json, ignoreDiscriminator) {\r\n    if ((json === undefined) || (json === null)) {\r\n        return json;\r\n    }\r\n    return {\r\n        \r\n        'recordfoodmenu': !exists(json, 'RECORDFOODMENU') ? undefined : EntFOODMENUFromJSON(json['RECORDFOODMENU']),\r\n        'recordingredient': !exists(json, 'RECORDINGREDIENT') ? undefined : EntMainingreFromJSON(json['RECORDINGREDIENT']),\r\n        'recordsource': !exists(json, 'RECORDSOURCE') ? undefined : EntSourceFromJSON(json['RECORDSOURCE']),\r\n        'recorduser': !exists(json, 'RECORDUSER') ? undefined : EntUserFromJSON(json['RECORDUSER']),\r\n    };\r\n}\r\n\r\nexport function EntRecordfoodEdgesToJSON(value) {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (value === null) {\r\n        return null;\r\n    }\r\n    return {\r\n        \r\n        'recordfoodmenu': EntFOODMENUToJSON(value.recordfoodmenu),\r\n        'recordingredient': EntMainingreToJSON(value.recordingredient),\r\n        'recordsource': EntSourceToJSON(value.recordsource),\r\n        'recorduser': EntUserToJSON(value.recorduser),\r\n    };\r\n}\r\n\r\n\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n/**\r\n * SUT SA Example API\r\n * This is a sample server for SUT SE 2563\r\n *\r\n * The version of the OpenAPI document: 1.0\r\n * Contact: support@swagger.io\r\n *\r\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\r\n * https://openapi-generator.tech\r\n * Do not edit the class manually.\r\n */\r\n\r\nimport { exists, } from '../runtime';\r\nimport {\r\n\r\n    EntSourceEdgesFromJSON,\r\n\r\n    EntSourceEdgesToJSON,\r\n} from './';\r\n\r\n/**\r\n * \r\n * @export\r\n * @interface EntSource\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function EntSourceFromJSON(json) {\r\n    return EntSourceFromJSONTyped(json, false);\r\n}\r\n\r\nexport function EntSourceFromJSONTyped(json, ignoreDiscriminator) {\r\n    if ((json === undefined) || (json === null)) {\r\n        return json;\r\n    }\r\n    return {\r\n        \r\n        'sOURCEADDRESS': !exists(json, 'SOURCE_ADDRESS') ? undefined : json['SOURCE_ADDRESS'],\r\n        'sOURCENAME': !exists(json, 'SOURCE_NAME') ? undefined : json['SOURCE_NAME'],\r\n        'sOURCETLE': !exists(json, 'SOURCE_TLE') ? undefined : json['SOURCE_TLE'],\r\n        'edges': !exists(json, 'edges') ? undefined : EntSourceEdgesFromJSON(json['edges']),\r\n        'id': !exists(json, 'id') ? undefined : json['id'],\r\n    };\r\n}\r\n\r\nexport function EntSourceToJSON(value) {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (value === null) {\r\n        return null;\r\n    }\r\n    return {\r\n        \r\n        'SOURCE_ADDRESS': value.sOURCEADDRESS,\r\n        'SOURCE_NAME': value.sOURCENAME,\r\n        'SOURCE_TLE': value.sOURCETLE,\r\n        'edges': EntSourceEdgesToJSON(value.edges),\r\n        'id': value.id,\r\n    };\r\n}\r\n\r\n\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n/**\r\n * SUT SA Example API\r\n * This is a sample server for SUT SE 2563\r\n *\r\n * The version of the OpenAPI document: 1.0\r\n * Contact: support@swagger.io\r\n *\r\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\r\n * https://openapi-generator.tech\r\n * Do not edit the class manually.\r\n */\r\n\r\nimport { exists, } from '../runtime';\r\nimport {\r\n\r\n    EntRecordfoodFromJSON,\r\n\r\n    EntRecordfoodToJSON,\r\n} from './';\r\n\r\n/**\r\n * \r\n * @export\r\n * @interface EntSourceEdges\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function EntSourceEdgesFromJSON(json) {\r\n    return EntSourceEdgesFromJSONTyped(json, false);\r\n}\r\n\r\nexport function EntSourceEdgesFromJSONTyped(json, ignoreDiscriminator) {\r\n    if ((json === undefined) || (json === null)) {\r\n        return json;\r\n    }\r\n    return {\r\n        \r\n        'sourcerecord': !exists(json, 'sourcerecord') ? undefined : ((json['sourcerecord'] ).map(EntRecordfoodFromJSON)),\r\n    };\r\n}\r\n\r\nexport function EntSourceEdgesToJSON(value) {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (value === null) {\r\n        return null;\r\n    }\r\n    return {\r\n        \r\n        'sourcerecord': value.sourcerecord === undefined ? undefined : ((value.sourcerecord ).map(EntRecordfoodToJSON)),\r\n    };\r\n}\r\n\r\n\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n/**\r\n * SUT SA Example API\r\n * This is a sample server for SUT SE 2563\r\n *\r\n * The version of the OpenAPI document: 1.0\r\n * Contact: support@swagger.io\r\n *\r\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\r\n * https://openapi-generator.tech\r\n * Do not edit the class manually.\r\n */\r\n\r\nimport { exists, } from '../runtime';\r\nimport {\r\n\r\n    EntUserEdgesFromJSON,\r\n\r\n    EntUserEdgesToJSON,\r\n} from './';\r\n\r\n/**\r\n * \r\n * @export\r\n * @interface EntUser\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function EntUserFromJSON(json) {\r\n    return EntUserFromJSONTyped(json, false);\r\n}\r\n\r\nexport function EntUserFromJSONTyped(json, ignoreDiscriminator) {\r\n    if ((json === undefined) || (json === null)) {\r\n        return json;\r\n    }\r\n    return {\r\n        \r\n        'uSEREMAIL': !exists(json, 'USER_EMAIL') ? undefined : json['USER_EMAIL'],\r\n        'uSERNAME': !exists(json, 'USER_NAME') ? undefined : json['USER_NAME'],\r\n        'edges': !exists(json, 'edges') ? undefined : EntUserEdgesFromJSON(json['edges']),\r\n        'id': !exists(json, 'id') ? undefined : json['id'],\r\n    };\r\n}\r\n\r\nexport function EntUserToJSON(value) {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (value === null) {\r\n        return null;\r\n    }\r\n    return {\r\n        \r\n        'USER_EMAIL': value.uSEREMAIL,\r\n        'USER_NAME': value.uSERNAME,\r\n        'edges': EntUserEdgesToJSON(value.edges),\r\n        'id': value.id,\r\n    };\r\n}\r\n\r\n\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n/**\r\n * SUT SA Example API\r\n * This is a sample server for SUT SE 2563\r\n *\r\n * The version of the OpenAPI document: 1.0\r\n * Contact: support@swagger.io\r\n *\r\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\r\n * https://openapi-generator.tech\r\n * Do not edit the class manually.\r\n */\r\n\r\nimport { exists, } from '../runtime';\r\nimport {\r\n\r\n    EntRecordfoodFromJSON,\r\n\r\n    EntRecordfoodToJSON,\r\n} from './';\r\n\r\n/**\r\n * \r\n * @export\r\n * @interface EntUserEdges\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function EntUserEdgesFromJSON(json) {\r\n    return EntUserEdgesFromJSONTyped(json, false);\r\n}\r\n\r\nexport function EntUserEdgesFromJSONTyped(json, ignoreDiscriminator) {\r\n    if ((json === undefined) || (json === null)) {\r\n        return json;\r\n    }\r\n    return {\r\n        \r\n        'userrecord': !exists(json, 'userrecord') ? undefined : ((json['userrecord'] ).map(EntRecordfoodFromJSON)),\r\n    };\r\n}\r\n\r\nexport function EntUserEdgesToJSON(value) {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    if (value === null) {\r\n        return null;\r\n    }\r\n    return {\r\n        \r\n        'userrecord': value.userrecord === undefined ? undefined : ((value.userrecord ).map(EntRecordfoodToJSON)),\r\n    };\r\n}\r\n\r\n\r\n","/* tslint:disable */\r\n/* eslint-disable */\r\n/**\r\n * SUT SA Example API\r\n * This is a sample server for SUT SE 2563\r\n *\r\n * The version of the OpenAPI document: 1.0\r\n * Contact: support@swagger.io\r\n *\r\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\r\n * https://openapi-generator.tech\r\n * Do not edit the class manually.\r\n */\r\n\r\n\r\nimport * as runtime from '../runtime';\r\nimport {\r\n\r\n\r\n    ControllersRecordfoodToJSON,\r\n\r\n    EntFOODMENUFromJSON,\r\n    EntFOODMENUToJSON,\r\n\r\n    EntMainingreFromJSON,\r\n    EntMainingreToJSON,\r\n\r\n    EntRecordfoodFromJSON,\r\n\r\n\r\n    EntSourceFromJSON,\r\n    EntSourceToJSON,\r\n\r\n    EntUserFromJSON,\r\n    EntUserToJSON,\r\n} from '../models';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * \r\n */\r\nexport class DefaultApi extends runtime.BaseAPI {\r\n\r\n    /**\r\n     * Create foodmenu\r\n     * Create foodmenu\r\n     */\r\n    async createFoodmenuRaw(requestParameters) {\r\n        if (requestParameters.foodmenu === null || requestParameters.foodmenu === undefined) {\r\n            throw new runtime.RequiredError('foodmenu','Required parameter requestParameters.foodmenu was null or undefined when calling createFoodmenu.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        headerParameters['Content-Type'] = 'application/json';\r\n\r\n        const response = await this.request({\r\n            path: `/foodmenus`,\r\n            method: 'POST',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n            body: EntFOODMENUToJSON(requestParameters.foodmenu),\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntFOODMENUFromJSON(jsonValue));\r\n    }\r\n\r\n    /**\r\n     * Create foodmenu\r\n     * Create foodmenu\r\n     */\r\n    async createFoodmenu(requestParameters) {\r\n        const response = await this.createFoodmenuRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * Create mainingre\r\n     * Create mainingre\r\n     */\r\n    async createMainingreRaw(requestParameters) {\r\n        if (requestParameters.mainingre === null || requestParameters.mainingre === undefined) {\r\n            throw new runtime.RequiredError('mainingre','Required parameter requestParameters.mainingre was null or undefined when calling createMainingre.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        headerParameters['Content-Type'] = 'application/json';\r\n\r\n        const response = await this.request({\r\n            path: `/mainingres`,\r\n            method: 'POST',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n            body: EntMainingreToJSON(requestParameters.mainingre),\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntMainingreFromJSON(jsonValue));\r\n    }\r\n\r\n    /**\r\n     * Create mainingre\r\n     * Create mainingre\r\n     */\r\n    async createMainingre(requestParameters) {\r\n        const response = await this.createMainingreRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * Create recordfood\r\n     * Create recordfood\r\n     */\r\n    async createRecordfoodRaw(requestParameters) {\r\n        if (requestParameters.recordfood === null || requestParameters.recordfood === undefined) {\r\n            throw new runtime.RequiredError('recordfood','Required parameter requestParameters.recordfood was null or undefined when calling createRecordfood.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        headerParameters['Content-Type'] = 'application/json';\r\n\r\n        const response = await this.request({\r\n            path: `/recordfoods`,\r\n            method: 'POST',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n            body: ControllersRecordfoodToJSON(requestParameters.recordfood),\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntRecordfoodFromJSON(jsonValue));\r\n    }\r\n\r\n    /**\r\n     * Create recordfood\r\n     * Create recordfood\r\n     */\r\n    async createRecordfood(requestParameters) {\r\n        const response = await this.createRecordfoodRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * Create source\r\n     * Create source\r\n     */\r\n    async createSourceRaw(requestParameters) {\r\n        if (requestParameters.source === null || requestParameters.source === undefined) {\r\n            throw new runtime.RequiredError('source','Required parameter requestParameters.source was null or undefined when calling createSource.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        headerParameters['Content-Type'] = 'application/json';\r\n\r\n        const response = await this.request({\r\n            path: `/sources`,\r\n            method: 'POST',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n            body: EntSourceToJSON(requestParameters.source),\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntSourceFromJSON(jsonValue));\r\n    }\r\n\r\n    /**\r\n     * Create source\r\n     * Create source\r\n     */\r\n    async createSource(requestParameters) {\r\n        const response = await this.createSourceRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * Create user\r\n     * Create user\r\n     */\r\n    async createUserRaw(requestParameters) {\r\n        if (requestParameters.user === null || requestParameters.user === undefined) {\r\n            throw new runtime.RequiredError('user','Required parameter requestParameters.user was null or undefined when calling createUser.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        headerParameters['Content-Type'] = 'application/json';\r\n\r\n        const response = await this.request({\r\n            path: `/users`,\r\n            method: 'POST',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n            body: EntUserToJSON(requestParameters.user),\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntUserFromJSON(jsonValue));\r\n    }\r\n\r\n    /**\r\n     * Create user\r\n     * Create user\r\n     */\r\n    async createUser(requestParameters) {\r\n        const response = await this.createUserRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * get foodmenu by ID\r\n     * Delete a foodmenu entity by ID\r\n     */\r\n    async deleteFoodmenuRaw(requestParameters) {\r\n        if (requestParameters.id === null || requestParameters.id === undefined) {\r\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteFoodmenu.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        const response = await this.request({\r\n            path: `/foodmenus/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\r\n            method: 'DELETE',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response);\r\n    }\r\n\r\n    /**\r\n     * get foodmenu by ID\r\n     * Delete a foodmenu entity by ID\r\n     */\r\n    async deleteFoodmenu(requestParameters) {\r\n        const response = await this.deleteFoodmenuRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * get mainingre by ID\r\n     * Delete a mainingre entity by ID\r\n     */\r\n    async deleteMainingreRaw(requestParameters) {\r\n        if (requestParameters.id === null || requestParameters.id === undefined) {\r\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteMainingre.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        const response = await this.request({\r\n            path: `/mainingres/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\r\n            method: 'DELETE',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response);\r\n    }\r\n\r\n    /**\r\n     * get mainingre by ID\r\n     * Delete a mainingre entity by ID\r\n     */\r\n    async deleteMainingre(requestParameters) {\r\n        const response = await this.deleteMainingreRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * get recordfood by ID\r\n     * Delete a recordfood entity by ID\r\n     */\r\n    async deleteRecordfoodRaw(requestParameters) {\r\n        if (requestParameters.id === null || requestParameters.id === undefined) {\r\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteRecordfood.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        const response = await this.request({\r\n            path: `/recordfoods/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\r\n            method: 'DELETE',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response);\r\n    }\r\n\r\n    /**\r\n     * get recordfood by ID\r\n     * Delete a recordfood entity by ID\r\n     */\r\n    async deleteRecordfood(requestParameters) {\r\n        const response = await this.deleteRecordfoodRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * get source by ID\r\n     * Delete a source entity by ID\r\n     */\r\n    async deleteSourceRaw(requestParameters) {\r\n        if (requestParameters.id === null || requestParameters.id === undefined) {\r\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteSource.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        const response = await this.request({\r\n            path: `/sources/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\r\n            method: 'DELETE',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response);\r\n    }\r\n\r\n    /**\r\n     * get source by ID\r\n     * Delete a source entity by ID\r\n     */\r\n    async deleteSource(requestParameters) {\r\n        const response = await this.deleteSourceRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * get user by ID\r\n     * Delete a user entity by ID\r\n     */\r\n    async deleteUserRaw(requestParameters) {\r\n        if (requestParameters.id === null || requestParameters.id === undefined) {\r\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteUser.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        const response = await this.request({\r\n            path: `/users/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\r\n            method: 'DELETE',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response);\r\n    }\r\n\r\n    /**\r\n     * get user by ID\r\n     * Delete a user entity by ID\r\n     */\r\n    async deleteUser(requestParameters) {\r\n        const response = await this.deleteUserRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * get foodmenu by ID\r\n     * Get a foodmenu entity by ID\r\n     */\r\n    async getFoodmenuRaw(requestParameters) {\r\n        if (requestParameters.id === null || requestParameters.id === undefined) {\r\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getFoodmenu.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        const response = await this.request({\r\n            path: `/foodmenus/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\r\n            method: 'GET',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntFOODMENUFromJSON(jsonValue));\r\n    }\r\n\r\n    /**\r\n     * get foodmenu by ID\r\n     * Get a foodmenu entity by ID\r\n     */\r\n    async getFoodmenu(requestParameters) {\r\n        const response = await this.getFoodmenuRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * get mainingre by ID\r\n     * Get a mainingre entity by ID\r\n     */\r\n    async getMainingreRaw(requestParameters) {\r\n        if (requestParameters.id === null || requestParameters.id === undefined) {\r\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getMainingre.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        const response = await this.request({\r\n            path: `/mainingres/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\r\n            method: 'GET',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntMainingreFromJSON(jsonValue));\r\n    }\r\n\r\n    /**\r\n     * get mainingre by ID\r\n     * Get a mainingre entity by ID\r\n     */\r\n    async getMainingre(requestParameters) {\r\n        const response = await this.getMainingreRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * get source by ID\r\n     * Get a source entity by ID\r\n     */\r\n    async getSourceRaw(requestParameters) {\r\n        if (requestParameters.id === null || requestParameters.id === undefined) {\r\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getSource.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        const response = await this.request({\r\n            path: `/sources/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\r\n            method: 'GET',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntSourceFromJSON(jsonValue));\r\n    }\r\n\r\n    /**\r\n     * get source by ID\r\n     * Get a source entity by ID\r\n     */\r\n    async getSource(requestParameters) {\r\n        const response = await this.getSourceRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * get user by ID\r\n     * Get a user entity by ID\r\n     */\r\n    async getUserRaw(requestParameters) {\r\n        if (requestParameters.id === null || requestParameters.id === undefined) {\r\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getUser.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        const response = await this.request({\r\n            path: `/users/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\r\n            method: 'GET',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntUserFromJSON(jsonValue));\r\n    }\r\n\r\n    /**\r\n     * get user by ID\r\n     * Get a user entity by ID\r\n     */\r\n    async getUser(requestParameters) {\r\n        const response = await this.getUserRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * list foodmenu entities\r\n     * List foodmenu entities\r\n     */\r\n    async listFoodmenuRaw(requestParameters) {\r\n        const queryParameters = {};\r\n\r\n        if (requestParameters.limit !== undefined) {\r\n            queryParameters['limit'] = requestParameters.limit;\r\n        }\r\n\r\n        if (requestParameters.offset !== undefined) {\r\n            queryParameters['offset'] = requestParameters.offset;\r\n        }\r\n\r\n        const headerParameters = {};\r\n\r\n        const response = await this.request({\r\n            path: `/foodmenus`,\r\n            method: 'GET',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EntFOODMENUFromJSON));\r\n    }\r\n\r\n    /**\r\n     * list foodmenu entities\r\n     * List foodmenu entities\r\n     */\r\n    async listFoodmenu(requestParameters) {\r\n        const response = await this.listFoodmenuRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * list mainingre entities\r\n     * List mainingre entities\r\n     */\r\n    async listMainingreRaw(requestParameters) {\r\n        const queryParameters = {};\r\n\r\n        if (requestParameters.limit !== undefined) {\r\n            queryParameters['limit'] = requestParameters.limit;\r\n        }\r\n\r\n        if (requestParameters.offset !== undefined) {\r\n            queryParameters['offset'] = requestParameters.offset;\r\n        }\r\n\r\n        const headerParameters = {};\r\n\r\n        const response = await this.request({\r\n            path: `/mainingres`,\r\n            method: 'GET',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EntMainingreFromJSON));\r\n    }\r\n\r\n    /**\r\n     * list mainingre entities\r\n     * List mainingre entities\r\n     */\r\n    async listMainingre(requestParameters) {\r\n        const response = await this.listMainingreRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * list recordfood entities\r\n     * List recordfood entities\r\n     */\r\n    async listRecordfoodRaw(requestParameters) {\r\n        const queryParameters = {};\r\n\r\n        if (requestParameters.limit !== undefined) {\r\n            queryParameters['limit'] = requestParameters.limit;\r\n        }\r\n\r\n        if (requestParameters.offset !== undefined) {\r\n            queryParameters['offset'] = requestParameters.offset;\r\n        }\r\n\r\n        const headerParameters = {};\r\n\r\n        const response = await this.request({\r\n            path: `/recordfoods`,\r\n            method: 'GET',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EntRecordfoodFromJSON));\r\n    }\r\n\r\n    /**\r\n     * list recordfood entities\r\n     * List recordfood entities\r\n     */\r\n    async listRecordfood(requestParameters) {\r\n        const response = await this.listRecordfoodRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * list source entities\r\n     * List source entities\r\n     */\r\n    async listSourceRaw(requestParameters) {\r\n        const queryParameters = {};\r\n\r\n        if (requestParameters.limit !== undefined) {\r\n            queryParameters['limit'] = requestParameters.limit;\r\n        }\r\n\r\n        if (requestParameters.offset !== undefined) {\r\n            queryParameters['offset'] = requestParameters.offset;\r\n        }\r\n\r\n        const headerParameters = {};\r\n\r\n        const response = await this.request({\r\n            path: `/sources`,\r\n            method: 'GET',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EntSourceFromJSON));\r\n    }\r\n\r\n    /**\r\n     * list source entities\r\n     * List source entities\r\n     */\r\n    async listSource(requestParameters) {\r\n        const response = await this.listSourceRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * list user entities\r\n     * List user entities\r\n     */\r\n    async listUserRaw(requestParameters) {\r\n        const queryParameters = {};\r\n\r\n        if (requestParameters.limit !== undefined) {\r\n            queryParameters['limit'] = requestParameters.limit;\r\n        }\r\n\r\n        if (requestParameters.offset !== undefined) {\r\n            queryParameters['offset'] = requestParameters.offset;\r\n        }\r\n\r\n        const headerParameters = {};\r\n\r\n        const response = await this.request({\r\n            path: `/users`,\r\n            method: 'GET',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EntUserFromJSON));\r\n    }\r\n\r\n    /**\r\n     * list user entities\r\n     * List user entities\r\n     */\r\n    async listUser(requestParameters) {\r\n        const response = await this.listUserRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * update foodmenu by ID\r\n     * Update a foodmenu entity by ID\r\n     */\r\n    async updateFoodmenuRaw(requestParameters) {\r\n        if (requestParameters.id === null || requestParameters.id === undefined) {\r\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateFoodmenu.');\r\n        }\r\n\r\n        if (requestParameters.foodmenu === null || requestParameters.foodmenu === undefined) {\r\n            throw new runtime.RequiredError('foodmenu','Required parameter requestParameters.foodmenu was null or undefined when calling updateFoodmenu.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        headerParameters['Content-Type'] = 'application/json';\r\n\r\n        const response = await this.request({\r\n            path: `/foodmenus/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\r\n            method: 'PUT',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n            body: EntFOODMENUToJSON(requestParameters.foodmenu),\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntFOODMENUFromJSON(jsonValue));\r\n    }\r\n\r\n    /**\r\n     * update foodmenu by ID\r\n     * Update a foodmenu entity by ID\r\n     */\r\n    async updateFoodmenu(requestParameters) {\r\n        const response = await this.updateFoodmenuRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * update mainingre by ID\r\n     * Update a mainingre entity by ID\r\n     */\r\n    async updateMainingreRaw(requestParameters) {\r\n        if (requestParameters.id === null || requestParameters.id === undefined) {\r\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateMainingre.');\r\n        }\r\n\r\n        if (requestParameters.mainingre === null || requestParameters.mainingre === undefined) {\r\n            throw new runtime.RequiredError('mainingre','Required parameter requestParameters.mainingre was null or undefined when calling updateMainingre.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        headerParameters['Content-Type'] = 'application/json';\r\n\r\n        const response = await this.request({\r\n            path: `/mainingres/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\r\n            method: 'PUT',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n            body: EntMainingreToJSON(requestParameters.mainingre),\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntMainingreFromJSON(jsonValue));\r\n    }\r\n\r\n    /**\r\n     * update mainingre by ID\r\n     * Update a mainingre entity by ID\r\n     */\r\n    async updateMainingre(requestParameters) {\r\n        const response = await this.updateMainingreRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * update source by ID\r\n     * Update a source entity by ID\r\n     */\r\n    async updateSourceRaw(requestParameters) {\r\n        if (requestParameters.id === null || requestParameters.id === undefined) {\r\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateSource.');\r\n        }\r\n\r\n        if (requestParameters.source === null || requestParameters.source === undefined) {\r\n            throw new runtime.RequiredError('source','Required parameter requestParameters.source was null or undefined when calling updateSource.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        headerParameters['Content-Type'] = 'application/json';\r\n\r\n        const response = await this.request({\r\n            path: `/sources/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\r\n            method: 'PUT',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n            body: EntSourceToJSON(requestParameters.source),\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntSourceFromJSON(jsonValue));\r\n    }\r\n\r\n    /**\r\n     * update source by ID\r\n     * Update a source entity by ID\r\n     */\r\n    async updateSource(requestParameters) {\r\n        const response = await this.updateSourceRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n    /**\r\n     * update user by ID\r\n     * Update a user entity by ID\r\n     */\r\n    async updateUserRaw(requestParameters) {\r\n        if (requestParameters.id === null || requestParameters.id === undefined) {\r\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateUser.');\r\n        }\r\n\r\n        if (requestParameters.user === null || requestParameters.user === undefined) {\r\n            throw new runtime.RequiredError('user','Required parameter requestParameters.user was null or undefined when calling updateUser.');\r\n        }\r\n\r\n        const queryParameters = {};\r\n\r\n        const headerParameters = {};\r\n\r\n        headerParameters['Content-Type'] = 'application/json';\r\n\r\n        const response = await this.request({\r\n            path: `/users/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\r\n            method: 'PUT',\r\n            headers: headerParameters,\r\n            query: queryParameters,\r\n            body: EntUserToJSON(requestParameters.user),\r\n        });\r\n\r\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntUserFromJSON(jsonValue));\r\n    }\r\n\r\n    /**\r\n     * update user by ID\r\n     * Update a user entity by ID\r\n     */\r\n    async updateUser(requestParameters) {\r\n        const response = await this.updateUserRaw(requestParameters);\r\n        return await response.value();\r\n    }\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DefaultApi } from '../../api/apis';\r\n\r\n\r\n\r\n \r\nconst useStyles = makeStyles({\r\n table: {\r\n   minWidth: 650,\r\n },\r\n});\r\n \r\nexport default function ComponentsTable() {\r\n const classes = useStyles();\r\n const api = new DefaultApi();\r\n const [users, setUsers] = useState(Array);\r\n const [loading, setLoading] = useState(true);\r\n\r\n const [recordfoods, setRecordfoods] = useState([]);\r\n \r\n useEffect(() => {\r\n   const getRecordfoods = async () => {\r\n     const res = await api.listRecordfood({ limit: 10, offset: 0 });\r\n     setLoading(false);\r\n     setRecordfoods(res);\r\n   };\r\n   getRecordfoods();\r\n }, [loading]);\r\n \r\n const deleteRecordfoods = async (id) => {\r\n   const res = await api.deleteRecordfood({ id: id });\r\n   setLoading(true);\r\n };\r\n \r\n return (\r\n   React.createElement(TableContainer, { component: Paper,}\n     , React.createElement(Table, { className: classes.table, 'aria-label': \"simple table\" ,}\n       , React.createElement(TableHead, null\n         , React.createElement(TableRow, null\n           , React.createElement(TableCell, { align: \"center\",}, \"Record ID \"  )\n           , React.createElement(TableCell, { align: \"center\",}, \"User Name\" )\n           , React.createElement(TableCell, { align: \"center\",}, \"ชื่ออาหาร\")\n           , React.createElement(TableCell, { align: \"center\",}, \"วัตถุดิหลัก\")\n           , React.createElement(TableCell, { align: \"center\",}, \"แหล่งที่มา\")\n           , React.createElement(TableCell, { align: \"center\",}, \"ที่อยู่\")\n           , React.createElement(TableCell, { align: \"center\",}, \"เบอร์โทร\")\n           )\n       )\n       , React.createElement(TableBody, null\n         , recordfoods.map((item) => (\r\n           React.createElement(TableRow, { key: item.id,}\n             , React.createElement(TableCell, { align: \"center\",}, item.id)\n             , React.createElement(TableCell, { align: \"center\",}, item.edges.recorduser.uSERNAME)\n             , React.createElement(TableCell, { align: \"center\",}, item.edges.recordfoodmenu.fOODMENUNAME)\n             , React.createElement(TableCell, { align: \"center\",}, item.edges.recordingredient.mAININGREDIENTNAME)\n             , React.createElement(TableCell, { align: \"center\",}, item.edges.recordsource.sOURCENAME)\n             , React.createElement(TableCell, { align: \"center\",}, item.edges.recordsource.sOURCEADDRESS)\n             , React.createElement(TableCell, { align: \"center\",}, item.edges.recordsource.sOURCETLE)\n             , React.createElement(TableCell, { align: \"center\",}\n               , React.createElement(Button, {\r\n                 onClick: () => {\r\n                  deleteRecordfoods(item.id);\r\n                 },\r\n                 style: { marginLeft: 10 },\r\n                 variant: \"contained\",\r\n                 color: \"secondary\",}\r\n               , \"Delete\"\n\n               )\n             )\n           )\r\n         ))\n       )\n     )\n   )\r\n );\r\n}\r\n","import React, { } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ComponanceTable from '../Table';\r\nimport Button from '@material-ui/core/Button';\r\n \r\nimport {\r\n Content,\r\n Header,\r\n Page,\r\n pageTheme,\r\n ContentHeader,\r\n Link,\r\n} from '@backstage/core';\r\n \r\nconst WelcomePage = () => {\r\n const profile = { givenName: 'ตารางบันทึกแหล่งที่มาของอาหาร' };\r\n \r\n \r\n return (\r\n   React.createElement(Page, { theme: pageTheme.home,}\n     , React.createElement(Header, {\r\n       title: ` ${profile.givenName || 'to Backstage'}`,\r\n       subtitle: \"บอกข้อมูลแหล่งที่มาของอาหาร\",}\r\n     )\n     , React.createElement(Content, null\n       , React.createElement(ContentHeader, { title: \"Source\",}\n         , React.createElement(Link, { component: RouterLink, to: \"/user\",}\n           , React.createElement(Button, { variant: \"contained\", color: \"primary\",}, \"เพิ่มข้อมูล\"\n\n           )\n         )\n       )\n       , React.createElement(ComponanceTable, null)\n     )\n   )\r\n );\r\n};\r\n \r\nexport default WelcomePage;","import React, { useState,useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  Content,\r\n  Header,\r\n  Page,\r\n  pageTheme,\r\n  ContentHeader,\r\n} from '@backstage/core';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DefaultApi } from '../../api/apis';\r\n\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'center',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: '25ch',\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nconst initialUserState = {\r\n  name: 'Makawan Thojan',\r\n  n: 10,\r\n  \r\n};\r\n\r\nexport default function Create() {\r\n  const classes = useStyles();\r\n  const profile = { givenName: 'บันทึกแหล่งที่มาของอาหาร' };\r\n  const username = { givenuser: 'faomg201@gmail.com' };\r\n  const logout = { givenlogout: 'logout' };\r\n  const api = new DefaultApi();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [user, setUser] = useState(initialUserState);\r\n  const [foodmenus, setFOODMENU] = useState([]);\r\n  const [mainingres, setMainingre] = useState([]);\r\n  const [sources, setSource] = useState([]);\r\n  const [recordfoods, setRec] = useState([]);\r\n  const [status, setStatus] = useState(false);\r\n  const [alert, setAlert] = useState(true);\r\n\r\n  const [foodmenuid, setFOODMENUID] = useState(Number);\r\n  const [mainingreid, setMainingreID] = useState(Number);\r\n  const [sourceid, setSourceID] = useState(Number);\r\n\r\n  useEffect(() => {    \r\n    const getFOODMENU = async () => {\r\n      const res = await api.listFoodmenu({ limit: 10, offset: 0 });\r\n      setLoading(false);\r\n      setFOODMENU(res);\r\n    };\r\n    getFOODMENU();\r\n\r\n    const getMainingre = async () => {\r\n      const res = await api.listMainingre({ limit: 10, offset: 0 });\r\n      setLoading(false);\r\n      setMainingre(res);\r\n    };\r\n    getMainingre();\r\n\r\n    const getSource = async () => {\r\n      const res = await api.listSource({ limit: 10, offset: 0 });\r\n      setLoading(false);\r\n      setSource(res);\r\n    };\r\n    getSource();\r\n\r\n\r\n  }, [loading]);\r\n\r\n  const FOODMENUhandleChange = (event) => {\r\n    setFOODMENUID(event.target.value );\r\n  };\r\n\r\n  const MainingrehandleChange = (event) => {\r\n    setMainingreID(event.target.value );\r\n  };\r\n\r\n  const SourcehandleChange = (event) => {\r\n    setSourceID(event.target.value );\r\n  };\r\n\r\n  const CreateRecordfood = async () => {\r\n    const recordfood = {\r\n      recordFOODMENU: foodmenuid,\r\n      recordINGREDIENT: mainingreid,\r\n      recordSOURCE: sourceid,\r\n      recordUSER: 2\r\n    };\r\n    \r\n    console.log(recordfood);\r\n    const res = await api.createRecordfood({ recordfood: recordfood });\r\n    setStatus(true);\r\n    if (res.id != '') {\r\n      setAlert(true);\r\n    } else {\r\n      setAlert(false);\r\n    }\r\n    const timer = setTimeout(() => {\r\n      setStatus(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    React.createElement(Page, { theme: pageTheme.home,}\n      , React.createElement(Header, {\r\n        title: ` ${profile.givenName || 'to Backstage'}`,\r\n        subtitle: \"\",}\r\n      )\n      , React.createElement(Content, null\n      , React.createElement(ContentHeader, {  title: \"เพิ่มข้อมูลแหล่งที่มาของอาหาร\",}\n      , React.createElement(Typography, { align: \"left\", style: { marginRight: 16, color: \"#00eeff\" },}\n            , username.givenuser\n          )\n          , React.createElement(Button, { variant: \"contained\", color: \"primary\",}, \"ออกจากระบบ\"\n\n          )\n          , status ? (\r\n            React.createElement('div', null\n              , alert ? (\r\n                React.createElement(Alert, { severity: \"success\",}, \"บันทึกสำเร็จ\"\n\n                )\r\n              ) : (\r\n                  React.createElement(Alert, { severity: \"warning\", style: { marginTop: 20 },}, \"พบปัญหาระหว่างบันทึกข้อมูล\"\n\n                  )\r\n                )\n            )\r\n          ) : null\n        )\n\n        , React.createElement('div', { className: classes.root,}\n          , React.createElement('form', { noValidate: true, autoComplete: \"off\",}\n          , React.createElement(FormControl, {\r\n                className: classes.margin,\r\n                variant: \"outlined\",}\r\n              \n                , React.createElement(InputLabel, { id: \"foodmenu-label\",}, \"ชื่ออาหาร\")\n                , React.createElement(Select, {\r\n                  labelId: \"foodmenu-label\",\r\n                  id: \"foodmenu\",\r\n                  value: foodmenuid,\r\n                  onChange: FOODMENUhandleChange,\r\n                  style: { width: 400 },}\r\n                \n                , foodmenus.map((item) => (\r\n                  React.createElement(MenuItem, { value: item.id,}, item.fOODMENUNAME)\r\n                ))\n                )\n              )\n\n            , React.createElement('div', null\n              , React.createElement(FormControl, {\r\n                className: classes.margin,\r\n                variant: \"outlined\",}\r\n              \n                , React.createElement(InputLabel, { id: \"Mainingre-label\",}, \"ชื่อวัตถุดิบหลักก\")\n                , React.createElement(Select, {\r\n                  labelId: \"Mainingre-label\",\r\n                  id: \"mainingre\",\r\n                  value: mainingreid,\r\n                  onChange: MainingrehandleChange,\r\n                  style: { width: 400 },}\r\n                \n                , mainingres.map((item) => (\r\n                  React.createElement(MenuItem, { value: item.id,}, item.mAININGREDIENTNAME)\r\n                ))\n                )\n              )\n            )\n\n            , React.createElement(FormControl, {\r\n              className: classes.margin,\r\n              variant: \"outlined\",}\r\n            \n              , React.createElement(InputLabel, { id: \"Source-label\",}, \"ชื่อร้านอาหาร\")\n              , React.createElement(Select, {\r\n                labelId: \"Source-label\",\r\n                id: \"source\",\r\n                value: sourceid,\r\n                onChange: SourcehandleChange,\r\n                style: { width: 200 },}\r\n              \n                , sources.map((item) => (\r\n                  React.createElement(MenuItem, { value: item.id,}, item.sOURCENAME)\r\n                ))\n              )\n            )\n            , React.createElement('div', { className: classes.margin,}\n              , React.createElement(Button, {\r\n                onClick: () => {\r\n                  CreateRecordfood();\r\n                },\r\n                variant: \"contained\",\r\n                color: \"primary\",}\r\n              , \"ยืนยัน\"\n\n             )\n              , React.createElement(Button, {\r\n                style: { marginLeft: 20 },\r\n                component: RouterLink,\r\n                to: \"/\",\r\n                variant: \"contained\",}\r\n              , \"กลับ\"\n\n             )\n            )\n          )\n        )\n      )\n    )\r\n  );\r\n}\r\n","import { createPlugin } from '@backstage/core';\r\nimport WelcomePage from './components/WelcomePage';\r\nimport CreateUser from './components/Users';\r\n \r\nexport const plugin = createPlugin({\r\n  id: 'welcome',\r\n  register({ router }) {\r\n    router.registerRoute('/', WelcomePage);\r\n    router.registerRoute('/user', CreateUser);\r\n  },\r\n});\r\n","import { createApp } from '@backstage/core';\r\nimport React, { } from 'react';\r\nimport * as plugins from './plugins';\r\n\r\nconst app = createApp({\r\n  plugins: Object.values(plugins),\r\n});\r\n\r\nconst AppProvider = app.getProvider();\r\nconst AppRouter = app.getRouter();\r\nconst AppRoutes = app.getRoutes();\r\n\r\nconst App = () => (\r\n  React.createElement(AppProvider, null\n    , React.createElement(AppRouter, null\n      , React.createElement(AppRoutes, null )\n    )\n  )\r\n);\r\n\r\nexport default App;\r\n","import '@backstage/cli/asset-types';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(React.createElement(App, null ), document.getElementById('root'));\r\n"],"sourceRoot":""}