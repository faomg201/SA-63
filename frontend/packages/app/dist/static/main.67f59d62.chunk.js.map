{"version":3,"sources":["webpack:///C:/TEST/SA-63/frontend/plugins/welcome/src/api/runtime.ts","webpack:///C:/TEST/SA-63/frontend/plugins/welcome/src/api/models/EntUser.ts","webpack:///C:/TEST/SA-63/frontend/plugins/welcome/src/api/apis/DefaultApi.ts","webpack:///C:/TEST/SA-63/frontend/plugins/welcome/src/components/Table/Tables.tsx","webpack:///C:/TEST/SA-63/frontend/plugins/welcome/src/components/WelcomePage/WelcomePage.tsx","webpack:///C:/TEST/SA-63/frontend/plugins/welcome/src/components/Cprod/Cprod.tsx","webpack:///C:/TEST/SA-63/frontend/plugins/welcome/src/components/Cbuy/Cbuy.tsx","webpack:///C:/TEST/SA-63/frontend/plugins/welcome/src/components/Users/Create.tsx","webpack:///C:/TEST/SA-63/frontend/plugins/welcome/src/plugin.ts","webpack:///./src/App.tsx","webpack:///./src/index.tsx"],"names":["BASE_PATH","replace","BaseAPI","configuration","Configuration","this","prototype","__init","call","middleware","middlewares","next","clone","concat","preMiddlewares","map","pre","withMiddleware","postMiddlewares","post","context","url","init","createFetchParams","response","fetchApi","status","basePath","path","undefined","query","Object","keys","length","queryParamsStringify","body","FormData","URLSearchParams","value","Blob","JSON","stringify","headers","assign","method","credentials","async","fetchParams","fetch","constructor","slice","RequiredError","Error","name","field","msg","super","__init2","window","bind","querystring","username","password","apiKey","accessToken","exists","json","key","params","prefix","fullKey","Array","multiValue","singleValue","encodeURIComponent","String","join","filter","part","JSONApiResponse","raw","transformer","jsonValue","EntUserFromJSON","ignoreDiscriminator","EntUserFromJSONTyped","EntUserToJSON","age","id","requestParameters","user","headerParameters","request","createUserRaw","deleteUserRaw","getUserRaw","queryParameters","limit","offset","listUserRaw","updateUserRaw","useStyles","makeStyles","table","minWidth","ComponentsTable","classes","api","users","setUsers","loading","setLoading","res","listUser","getUsers","createElement","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","align","TableBody","item","Button","onClick","deleteUser","deleteUsers","style","marginLeft","variant","color","theme","home","title","subtitle","to","ComboBox","Autocomplete","options","Product","getOptionLabel","option","width","marginRight","marginTop","renderInput","TextField","label","createStyles","root","display","flexWrap","justifyContent","margin","spacing","withoutLabel","textField","initialUserState","n","Create","setUser","setStatus","alert","setAlert","fontSize","Typography","href","Alert","severity","noValidate","autoComplete","FormControl","type","size","onChange","event","target","container","defaultValue","InputLabelProps","shrink","createUser","setTimeout","CreateUser","router","registerRoute","app","plugins","values","AppProvider","getProvider","AppRouter","getRouter","AppRoutes","getRoutes","render","document","getElementById"],"mappings":"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","file":"static/main.67f59d62.chunk.js","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport const BASE_PATH = \"http://localhost:8080/api/v1\".replace(/\\/+$/, \"\");\n\nconst isBlob = (value) => typeof Blob !== 'undefined' && value instanceof Blob;\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n\n    \n\n    constructor( configuration = new Configuration()) {;this.configuration = configuration;BaseAPI.prototype.__init.call(this);\n        this.middleware = configuration.middleware;\n    }\n\n    withMiddleware( ...middlewares) {\n        const next = this.clone();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n\n    withPreMiddleware( ...preMiddlewares) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware(...middlewares);\n    }\n\n    withPostMiddleware( ...postMiddlewares) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware(...middlewares);\n    }\n\n     async request(context) {\n        const { url, init } = this.createFetchParams(context);\n        const response = await this.fetchApi(url, init);\n        if (response.status >= 200 && response.status < 300) {\n            return response;\n        }\n        throw response;\n    }\n\n     createFetchParams(context) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n        const body = ((typeof FormData !== \"undefined\" && context.body instanceof FormData) || context.body instanceof URLSearchParams || isBlob(context.body))\n\t    ? context.body\n\t    : JSON.stringify(context.body);\n\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        const init = {\n            method: context.method,\n            headers: headers,\n            body,\n            credentials: this.configuration.credentials\n        };\n        return { url, init };\n    }\n\n     __init() {this.fetchApi = async (url, init) => {\n        let fetchParams = { url, init };\n        for (const middleware of this.middleware) {\n            if (middleware.pre) {\n                fetchParams = await middleware.pre({\n                    fetch: this.fetchApi,\n                    ...fetchParams,\n                }) || fetchParams;\n            }\n        }\n        let response = await this.configuration.fetchApi(fetchParams.url, fetchParams.init);\n        for (const middleware of this.middleware) {\n            if (middleware.post) {\n                response = await middleware.post({\n                    fetch: this.fetchApi,\n                    url,\n                    init,\n                    response: response.clone(),\n                }) || response;\n            }\n        }\n        return response;\n    }}\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n     clone() {\n        const constructor = this.constructor ;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n};\n\nexport class RequiredError extends Error {\n    __init2() {this.name = \"RequiredError\"}\n    constructor( field, msg) {\n        super(msg);this.field = field;RequiredError.prototype.__init2.call(this);;\n    }\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport class Configuration {\n    constructor( configuration = {}) {;this.configuration = configuration;}\n\n    get basePath() {\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;\n    }\n\n    get fetchApi() {\n        return this.configuration.fetchApi || window.fetch.bind(window);\n    }\n\n    get middleware() {\n        return this.configuration.middleware || [];\n    }\n\n    get queryParamsStringify() {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n\n    get username() {\n        return this.configuration.username;\n    }\n\n    get password() {\n        return this.configuration.password;\n    }\n\n    get apiKey() {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n\n    get accessToken() {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : () => accessToken;\n        }\n        return undefined;\n    }\n\n    get headers() {\n        return this.configuration.headers;\n    }\n\n    get credentials() {\n        return this.configuration.credentials;\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function exists(json, key) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\n\nexport function querystring(params, prefix = '') {\n    return Object.keys(params)\n        .map((key) => {\n            const fullKey = prefix + (prefix.length ? `[${key}]` : key);\n            const value = params[key];\n            if (value instanceof Array) {\n                const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n                    .join(`&${encodeURIComponent(fullKey)}=`);\n                return `${encodeURIComponent(fullKey)}=${multiValue}`;\n            }\n            if (value instanceof Object) {\n                return querystring(value , fullKey);\n            }\n            return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n        })\n        .filter(part => part.length > 0)\n        .join('&');\n}\n\nexport function mapValues(data, fn) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\n    {}\n  );\n}\n\nexport function canConsumeForm(consumes) {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport class JSONApiResponse {\n    constructor( raw,  transformer = (jsonValue) => jsonValue) {;this.raw = raw;this.transformer = transformer;}\n\n    async value() {\n        return this.transformer(await this.raw.json());\n    }\n}\n\nexport class VoidApiResponse {\n    constructor( raw) {;this.raw = raw;}\n\n    async value() {\n        return undefined;\n    }\n}\n\nexport class BlobApiResponse {\n    constructor( raw) {;this.raw = raw;}\n\n    async value() {\n        return await this.raw.blob();\n    };\n}\n\nexport class TextApiResponse {\n    constructor( raw) {;this.raw = raw;}\n\n    async value() {\n        return await this.raw.text();\n    };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, } from '../runtime';\n/**\n * \n * @export\n * @interface EntUser\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function EntUserFromJSON(json) {\n    return EntUserFromJSONTyped(json, false);\n}\n\nexport function EntUserFromJSONTyped(json, ignoreDiscriminator) {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'age': !exists(json, 'age') ? undefined : json['age'],\n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'name': !exists(json, 'name') ? undefined : json['name'],\n    };\n}\n\nexport function EntUserToJSON(value) {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'age': value.age,\n        'id': value.id,\n        'name': value.name,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * SUT SA Example API\n * This is a sample server for SUT SE 2563\n *\n * The version of the OpenAPI document: 1.0\n * Contact: support@swagger.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n\n    EntUserFromJSON,\n    EntUserToJSON,\n} from '../models';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * \n */\nexport class DefaultApi extends runtime.BaseAPI {\n\n    /**\n     * Create user\n     * Create user\n     */\n    async createUserRaw(requestParameters) {\n        if (requestParameters.user === null || requestParameters.user === undefined) {\n            throw new runtime.RequiredError('user','Required parameter requestParameters.user was null or undefined when calling createUser.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/users`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: EntUserToJSON(requestParameters.user),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntUserFromJSON(jsonValue));\n    }\n\n    /**\n     * Create user\n     * Create user\n     */\n    async createUser(requestParameters) {\n        const response = await this.createUserRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * get user by ID\n     * Delete a user entity by ID\n     */\n    async deleteUserRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteUser.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/users/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'DELETE',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response);\n    }\n\n    /**\n     * get user by ID\n     * Delete a user entity by ID\n     */\n    async deleteUser(requestParameters) {\n        const response = await this.deleteUserRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * get user by ID\n     * Get a user entity by ID\n     */\n    async getUserRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getUser.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/users/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntUserFromJSON(jsonValue));\n    }\n\n    /**\n     * get user by ID\n     * Get a user entity by ID\n     */\n    async getUser(requestParameters) {\n        const response = await this.getUserRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * list user entities\n     * List user entities\n     */\n    async listUserRaw(requestParameters) {\n        const queryParameters = {};\n\n        if (requestParameters.limit !== undefined) {\n            queryParameters['limit'] = requestParameters.limit;\n        }\n\n        if (requestParameters.offset !== undefined) {\n            queryParameters['offset'] = requestParameters.offset;\n        }\n\n        const headerParameters = {};\n\n        const response = await this.request({\n            path: `/users`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(EntUserFromJSON));\n    }\n\n    /**\n     * list user entities\n     * List user entities\n     */\n    async listUser(requestParameters) {\n        const response = await this.listUserRaw(requestParameters);\n        return await response.value();\n    }\n\n    /**\n     * update user by ID\n     * Update a user entity by ID\n     */\n    async updateUserRaw(requestParameters) {\n        if (requestParameters.id === null || requestParameters.id === undefined) {\n            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateUser.');\n        }\n\n        if (requestParameters.user === null || requestParameters.user === undefined) {\n            throw new runtime.RequiredError('user','Required parameter requestParameters.user was null or undefined when calling updateUser.');\n        }\n\n        const queryParameters = {};\n\n        const headerParameters = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/users/{id}`.replace(`{${\"id\"}}`, encodeURIComponent(String(requestParameters.id))),\n            method: 'PUT',\n            headers: headerParameters,\n            query: queryParameters,\n            body: EntUserToJSON(requestParameters.user),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => EntUserFromJSON(jsonValue));\n    }\n\n    /**\n     * update user by ID\n     * Update a user entity by ID\n     */\n    async updateUser(requestParameters) {\n        const response = await this.updateUserRaw(requestParameters);\n        return await response.value();\n    }\n\n}\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DefaultApi } from '../../api/apis';\r\n \r\nconst useStyles = makeStyles({\r\n table: {\r\n   minWidth: 650,\r\n },\r\n});\r\n \r\nexport default function ComponentsTable() {\r\n const classes = useStyles();\r\n const api = new DefaultApi();\r\n const [users, setUsers] = useState(Array);\r\n const [loading, setLoading] = useState(true);\r\n \r\n useEffect(() => {\r\n   const getUsers = async () => {\r\n     const res = await api.listUser({ limit: 10, offset: 0 });\r\n     setLoading(false);\r\n     setUsers(res);\r\n   };\r\n   getUsers();\r\n }, [loading]);\r\n \r\n const deleteUsers = async (id) => {\r\n   const res = await api.deleteUser({ id: id });\r\n   setLoading(true);\r\n };\r\n \r\n return (\r\n   React.createElement(TableContainer, { component: Paper,}\n     , React.createElement(Table, { className: classes.table, 'aria-label': \"simple table\" ,}\n       , React.createElement(TableHead, null\n         , React.createElement(TableRow, null\n           , React.createElement(TableCell, { align: \"center\",}, \"No.\")\n           , React.createElement(TableCell, { align: \"center\",}, \"Product\")\n           , React.createElement(TableCell, { align: \"center\",}, \"Quantity\")\n           , React.createElement(TableCell, { align: \"center\",}, \"Seller\")\n           , React.createElement(TableCell, { align: \"center\",}, \"Customer\")\n           , React.createElement(TableCell, { align: \"center\",}, \"Time\")\n         )\n       )\n       , React.createElement(TableBody, null\n         , users.map(item => (\r\n           React.createElement(TableRow, { key: item.id,}\n             , React.createElement(TableCell, { align: \"center\",}, item.id)\n             , React.createElement(TableCell, { align: \"center\",}, item.name)\n             , React.createElement(TableCell, { align: \"center\",}, item.age)\n             , React.createElement(TableCell, { align: \"center\",}\n               , React.createElement(Button, {\r\n                 onClick: () => {\r\n                   deleteUsers(item.id);\r\n                 },\r\n                 style: { marginLeft: 10 },\r\n                 variant: \"contained\",\r\n                 color: \"secondary\",}\r\n               , \"Delete\"\n\n               )\n             )\n           )\r\n         ))\n       )\n     )\n   )\r\n );\r\n}\r\n","import React, { } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport ComponanceTable from '../Table';\nimport Button from '@material-ui/core/Button';\n \nimport {\n Content,\n Header,\n Page,\n pageTheme,\n ContentHeader,\n Link,\n} from '@backstage/core';\n \nconst WelcomePage = () => {\n const profile = { givenName: 'ใบบันทึกการขาย' };\n \n \n return (\n   React.createElement(Page, { theme: pageTheme.home,}\n     , React.createElement(Header, {\n       title: ` ${profile.givenName || 'to Backstage'}`,\n       subtitle: \"บอกข้อมูลสินค้าที่ถูกขาย\",}\n     )\n     , React.createElement(Content, null\n       , React.createElement(ContentHeader, { title: \"Stock\",}\n         , React.createElement(Link, { component: RouterLink, to: \"/user\",}\n           , React.createElement(Button, { variant: \"contained\", color: \"primary\",}, \"Add Data\"\n\n           )\n         )\n       )\n       , React.createElement(ComponanceTable, null)\n     )\n   )\n );\n};\n \nexport default WelcomePage;","/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function ComboBox() {\r\n  return (\r\n    React.createElement(Autocomplete, {\r\n      id: \"combo-box-Product\",\r\n      options: Product,\r\n      getOptionLabel: (option) => option.title,\r\n      style: { width: 500 ,marginLeft:0,marginRight:0,marginTop:8},\r\n      renderInput: (params) => React.createElement(TextField, { ...params, label: \"Product\", variant: \"outlined\",} ),}\r\n    )\r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst Product = [\r\n    { title: 'Book'},\r\n    { title: 'Lab Cover'},\r\n    { title: 'Paper',},\r\n    { title: 'Notebook'},\r\n];","/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nexport default function ComboBox() {\r\n  return (\r\n    React.createElement(Autocomplete, {\r\n      id: \"combo-box-Product\",\r\n      options: Product,\r\n      getOptionLabel: (option) => option.title,\r\n      style: { width: 500 ,marginLeft:0,marginRight:0,marginTop:8},\r\n      renderInput: (params) => React.createElement(TextField, { ...params, label: \"Customer\", variant: \"outlined\",} ),}\r\n    )\r\n  );\r\n}\r\n\r\n// Top 100 films as rated by IMDb users. http://www.imdb.com/chart/top\r\nconst Product = [\r\n    { title: 'Alongkorn Wanapradit'},\r\n    { title: 'Teerawat '},\r\n    { title: 'Kasitin',},\r\n    { title: 'Exam'},\r\n];","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  Content,\r\n  Header,\r\n  Page,\r\n  pageTheme,\r\n  ContentHeader,\r\n} from '@backstage/core';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { DefaultApi } from '../../api/apis';\r\nimport ComponanceCprod from '../Cprod';\r\nimport ComponanceCbuy from '../Cbuy';\r\nimport { Typography } from '@material-ui/core';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      justifyContent: 'center',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(3),\r\n    },\r\n    withoutLabel: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    textField: {\r\n      width: '25ch',\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nconst initialUserState = {\r\n  name: 'Alongkon Wannapradit',\r\n  n: 10,\r\n  \r\n};\r\n\r\nexport default function Create() {\r\n  const classes = useStyles();\r\n  const profile = { givenName: 'กรอกข้อมูลรายการสินค้า' };\r\n  const username = { givenuser: 'b6108526@g.sut.ac.th' };\r\n  const logout = { givenlogout: 'logout' };\r\n  const api = new DefaultApi();\r\n\r\n  const [user, setUser] = useState(initialUserState);\r\n  const [status, setStatus] = useState(false);\r\n  const [alert, setAlert] = useState(true);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { id, value } = event.target;\r\n    setUser({ ...user, [id]: value });\r\n  };\r\n\r\n  const CreateUser = async () => {\r\n    const res = await api.createUser({ user });\r\n    setStatus(true);\r\n    if (res.id != '') {\r\n      setAlert(true);\r\n    } else {\r\n      setAlert(false);\r\n    }\r\n    const timer = setTimeout(() => {\r\n      setStatus(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    React.createElement(Page, { theme: pageTheme.home,}\n      , React.createElement(Header, {\r\n        title: ` ${profile.givenName || 'to Backstage'}`,\r\n        subtitle: \"\",}\r\n      )\n      , React.createElement(Content, null\n\n        , React.createElement(ContentHeader, { title: \"\",}\n          , React.createElement('td', null\n            , React.createElement(AccountBoxIcon, { style: { fontSize: 200 },}, \"AccountBoxIcon\")\n\n            , React.createElement(Typography, { align: \"center\", style: { marginRight: 16, color: \"#000000\" },}\n              , username.givenuser)\n\n            , React.createElement('p', { align: \"center\",}\n              , React.createElement(Button, { variant: \"outlined\", color: \"Primary\", href: \"#outlined-buttons\",}, \"LogOut\"\n\n        )\n            )\n          )\n          , status ? (\r\n            React.createElement('div', null\n              , alert ? (\r\n                React.createElement(Alert, { severity: \"success\",}, \"This is a success alert — check it out!\"\n\n                )\r\n              ) : (\r\n                  React.createElement(Alert, { severity: \"warning\", style: { marginTop: 20 },}, \"This is a warning alert — check it out!\"\n\n                  )\r\n                )\n            )\r\n          ) : null\n        )\n        , React.createElement('div', { className: classes.root,}\n          , React.createElement('form', { noValidate: true, autoComplete: \"off\", align: \"center\",}\n\n            , React.createElement('div', null\n              , React.createElement(FormControl, {\r\n                //fullWidth\r\n                className: classes.margin,\r\n                variant: \"outlined\",}\r\n              \n                , React.createElement(ComponanceCprod, null)\n              )\n            )\n\n            , React.createElement('div', null\n              , React.createElement(FormControl, {\r\n                //fullWidth\r\n                className: classes.margin,\r\n                variant: \"outlined\",\r\n                style: { width: 500 },}\r\n              \n                , React.createElement(TextField, {\r\n                  id: \"name\",\r\n                  label: \"Quantity\",\r\n                  variant: \"outlined\",\r\n                  type: \"number\",\r\n                  size: \"medium\",\r\n                  value: user.n,\r\n                  onChange: handleInputChange,}\r\n                )\n              )\n            )\n\n            , React.createElement('div', null\n              , React.createElement(FormControl, {\r\n                //fullWidth\r\n                className: classes.margin,\r\n                variant: \"outlined\",}\r\n              \n                , React.createElement(ComponanceCbuy, null)\n              )\n            )\n\n            , React.createElement('form', { className: classes.container, noValidate: true,}\n              , React.createElement(TextField, {\r\n                id: \"datetime-local\",\r\n                label: \"Next appointment\" ,\r\n                type: \"datetime-local\",\r\n                defaultValue: \"2017-05-24T10:30\",\r\n                className: classes.textField,\r\n                InputLabelProps: {\r\n                  shrink: true,\r\n                },}\r\n              )\n            )\n            , React.createElement('div', { className: classes.margin,}\n              , React.createElement(Button, {\r\n                onClick: () => {\r\n                  CreateUser();\r\n                },\r\n                variant: \"contained\",\r\n                color: \"primary\",}\r\n              , \"Submit\"\n\n             )\n              , React.createElement(Button, {\r\n                style: { marginLeft: 20 },\r\n                component: RouterLink,\r\n                to: \"/\",\r\n                variant: \"contained\",}\r\n              , \"Back\"\n\n             )\n            )\n          )\n        )\n      )\n    )\r\n  );\r\n}\r\n","import { createPlugin } from '@backstage/core';\nimport WelcomePage from './components/WelcomePage';\nimport CreateUser from './components/Users';\n \nexport const plugin = createPlugin({\n  id: 'welcome',\n  register({ router }) {\n    router.registerRoute('/', WelcomePage);\n    router.registerRoute('/user', CreateUser);\n  },\n});\n","import { createApp } from '@backstage/core';\nimport React, { } from 'react';\nimport * as plugins from './plugins';\n\nconst app = createApp({\n  plugins: Object.values(plugins),\n});\n\nconst AppProvider = app.getProvider();\nconst AppRouter = app.getRouter();\nconst AppRoutes = app.getRoutes();\n\nconst App = () => (\n  React.createElement(AppProvider, null\n    , React.createElement(AppRouter, null\n      , React.createElement(AppRoutes, null )\n    )\n  )\n);\n\nexport default App;\n","import '@backstage/cli/asset-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(React.createElement(App, null ), document.getElementById('root'));\n"],"sourceRoot":""}